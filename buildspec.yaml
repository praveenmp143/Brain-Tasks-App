version: 0.2

# Configuration Note: Ensure AWS_ACCOUNT_ID, ECR_REPOSITORY_URI, and IMAGE_TAG 
# are set as environment variables in your CodeBuild project settings.
env:
  variables:
    K8S_NAMESPACE: default # Default Kubernetes namespace if not specified

phases:
  # --- PRE-BUILD PHASE: ECR Login ---
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_URI=$ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo "Image URI is $IMAGE_URI"

  # --- BUILD PHASE: Build and Push Docker Image ---
  build:
    commands:
      - echo "Building the Docker image..."
      # Build and tag the image
      - docker build -t $IMAGE_URI .
      - docker tag $IMAGE_URI $ECR_REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Pushing the Docker images to ECR..."
      - docker push $ECR_REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $IMAGE_URI

  # --- POST-BUILD PHASE: Prepare CodeDeploy Artifacts ---
  post_build:
    commands:
      - echo "Creating deployment artifacts..."
      # Update Kubernetes manifest with the dynamic image tag
      - sed -i "s|IMAGE_PLACEHOLDER|$IMAGE_URI|g" deployment.yaml
      - echo "Updated deployment.yaml with new image URI: $IMAGE_URI"
      # Update appspec with the target Kubernetes namespace
      - sed -i "s|NAMESPACE_PLACEHOLDER|$K8S_NAMESPACE|g" appspec.yml
      - echo "Updated appspec.yml with namespace: $K8S_NAMESPACE"

artifacts:
  files:
    # Artifacts passed to CodeDeploy
    - appspec.yml
    - deployment.yaml
  discard-paths: yes

